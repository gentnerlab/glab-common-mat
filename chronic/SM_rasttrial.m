function SM_rasttrial(toes,codes,y,codemapname)
%SM_rasttrial(TOES,CODES,Y,CODEMAPNAME)
%this function will plot the trial given by TOES, CODES on the current axis at y-value Y
%
%NOTE: This function is best used when called from another function that
%sets up axes and passes a number of trials to it eg. SM_rasttrials.m
%
%ex:
%TOES = [-1.2,-0.8,0,0.9,1.3,1.6,1.72,1.84,2.9,4.001]
%CODES = [1,2,double('<'),1,1,double('C'),1,1,double('>'),double('(')]
%Y = 1
%CODEMAPNAME = 'default'
%SM_rasttrial(TOES,CODES,Y,CODEMAPNAME)

if ~exist('codemapname','var')
    codemapname = 'defaultshading';
end

if ~exist('y','var')
    y = 1;
end

if ~exist('codes','var')
    codes = ones(length(toes),1);
elseif (isempty(codes))
    codes = ones(length(toes),1);
elseif (codes == -1)
    codes = ones(length(toes),1);
end

[codemap shadingmap] = loadcodemap(codemapname);

if isempty(shadingmap)
    for i = 1:length(toes)
        %     desiredcolor = codemap(codemap(:,1)==codes(i),2:4);
        %     tickheight = codemap(codemap(:,1)==codes(i),5);
        %     tickwidth = codemap(codemap(:,1)==codes(i),6);
        if any(codemap(:,1)==codes(i));
            line([toes(i) toes(i)],[y-codemap(codemap(:,1)==codes(i),5)/2 y+codemap(codemap(:,1)==codes(i),5)/2],'color',codemap(codemap(:,1)==codes(i),2:4),'linewidth',codemap(codemap(:,1)==codes(i),6));
        end
    end
else
    for i = 1:size(shadingmap,1)
        ind1 = find(codes==shadingmap(i,1), 1);             %shading code found then do shading
        if ~isempty(ind1)
            ind2 = find(codes==shadingmap(i,2), 1);
            if ~isempty(ind2) %have a shading pair
                %     desiredcolor = shadingmap(i,3:5);
                %     patchheight = shadingmap(i,6);
                patch([toes(ind1);toes(ind1);toes(ind2);toes(ind2)],[y-shadingmap(i,6)/2;y+shadingmap(i,6)/2;y+shadingmap(i,6)/2;y-shadingmap(i,6)/2],shadingmap(i,3:5),'edgecolor','none');
            end
        end
    end
    for i = 1:length(toes)
        %     desiredcolor = codemap(codemap(:,1)==codes(i),2:4);
        %     tickheight = codemap(codemap(:,1)==codes(i),5);
        %     tickwidth = codemap(codemap(:,1)==codes(i),6);
        if any(codemap(:,1)==codes(i));
            line([toes(i) toes(i)],[y-codemap(codemap(:,1)==codes(i),5)/2 y+codemap(codemap(:,1)==codes(i),5)/2],'color',codemap(codemap(:,1)==codes(i),2:4),'linewidth',codemap(codemap(:,1)==codes(i),6));
        end
    end
end

end

function [codemap,shadingmap] = loadcodemap(codemapname)
%codemap = loadcodemap(codemapname)
%codemap entry = [code,[color 1x3],tickheight,tickwidth]
%shadingmap entry = [startcode,endcode,[color 1x3],shadeheight]

if nargin<1;codemapname = 'default';end;

switch codemapname
    case 'default'
        shadingmap = [];
        codemap = ...
            [...
            1,0,0,1,0.9,1;...
            2,1,0,0,0.9,1;...
            double('<'),0,0,0,1,2;...
            double('>'),0,0,0,1,2;...
            double('('),.1,.1,.1,1,1;...
            double(')'),.1,.1,.1,1,1;...
            %           double('L'),.5,.5,.5,0.9,1;...
            %           double('C'),.5,.5,.5,0.9,1;...
            %           double('R'),.5,.5,.5,0.9,1;...
            double('F'),0,1,1,0.9,1;...
            double('f'),.2,1,1,0.9,1;...
            double('T'),1,0,1,0.9,1;...
            double('t'),1,0.2,1,0.9,1;...
            double('W'),1,1,0,0.9,1;...
            double('N'),1,1,0.2,0.9,1;...
            double('M'),0.8,0.5,0.2,1,2;... %motif start
            double('m'),0.8,0.2,0.5,1,2;... %motif stop
            ];
    case 'defaultshading'
        shadingmap = ...
            [...
            double('<'),double('>'),0.85,0.85,0.85,1;...
            %double('('),double(')'),.95,.95,.95,1;...
            double('M'),double('m'),0.75,0.75,0.75,1;... %motif start,stop
            double('F'),double('}'),0.4,1,0.4,1;... %feed start,stop
            double('T'),double(']'),0.8,0.7,0.4,1;... %timeout start,stop
            ];
        codemap = ...
            [...
            1,0,0,1,0.9,1;... %passive spikes
            2,1,0,0,0.9,1;... %engaged spikes
            %             double('L'),.1,.1,.1,1,1;...
            %             double('C'),.1,.1,.1,1,1;...
            %             double('R'),.1,.1,.1,1,1;...
            %             double('l'),.1,.1,.1,1,1;...
            %             double('c'),.1,.1,.1,1,1;...
            %             double('r'),.1,.1,.1,1,1;...
            double('F'),0.4,1,0.4,1,1.5;...
            double('f'),0.4,1,0.4,1,1.5;...
            double('T'),0.8,0.7,0.4,1,1.5;...
            double('t'),0.8,0.7,0.4,1,1.5;...
            double('W'),0.2,0.75,0.5,1,2;...
            double('N'),0.5,0.2,0.75,1,2;...
            double('<'),0.5,0.5,0.5,1,1.5;...
            double('>'),0.5,0.5,0.5,1,1.5;...
            ];
         case 'defaultshadingthick'
        shadingmap = ...
            [...
            double('<'),double('>'),0.75,0.75,0.75,1;...
            %double('('),double(')'),.95,.95,.95,1;...
            double('M'),double('m'),0.75,0.75,0.75,1;... %motif start,stop
            double('F'),double('}'),0.4,1,0.4,1;... %feed start,stop
            double('T'),double(']'),0.8,0.7,0.4,1;... %timeout start,stop
            ];
        codemap = ...
            [...
            1,0,0,1,0.9,2;... %passive spikes
            2,1,0,0,0.9,2;... %engaged spikes
            %             double('L'),.1,.1,.1,1,1;...
            %             double('C'),.1,.1,.1,1,1;...
            %             double('R'),.1,.1,.1,1,1;...
            %             double('l'),.1,.1,.1,1,1;...
            %             double('c'),.1,.1,.1,1,1;...
            %             double('r'),.1,.1,.1,1,1;...
            double('F'),0.4,1,0.4,1,1.5;...
            double('f'),0.4,1,0.4,1,1.5;...
            double('T'),0.8,0.7,0.4,1,1.5;...
            double('t'),0.8,0.7,0.4,1,1.5;...
            double('W'),0.2,0.75,0.5,1,2;...
            double('N'),0.5,0.2,0.75,1,2;...
            %double('<'),0.5,0.5,0.5,1,1.5;...
            %double('>'),0.5,0.5,0.5,1,1.5;...
            ];
    case 'defaultshading_noresult'
        shadingmap = ...
            [...
            double('<'),double('>'),0.85,0.85,0.85,1;...
            %double('('),double(')'),.95,.95,.95,1;...
            double('M'),double('m'),0.7,0.7,0.7,1;... %motif start,stop
            %           double('F'),double('}'),0.4,1,0.4,1;... %feed start,stop
            %          double('T'),double(']'),0.8,0.7,0.4,1;... %timeout start,stop
            ];
        codemap = ...
            [...
            1,0,0,1,0.9,1;... %passive spikes
            2,1,0,0,0.9,1;... %engaged spikes
            %             double('L'),.1,.1,.1,1,1;...
            %             double('C'),.1,.1,.1,1,1;...
            %             double('R'),.1,.1,.1,1,1;...
            %             double('l'),.1,.1,.1,1,1;...
            %             double('c'),.1,.1,.1,1,1;...
            %             double('r'),.1,.1,.1,1,1;...
            %       double('F'),0.4,1,0.4,1,1.5;...
            %      double('f'),0.4,1,0.4,1,1.5;...
            %     double('T'),0.8,0.7,0.4,1,1.5;...
            %    double('t'),0.8,0.7,0.4,1,1.5;...
            %   double('W'),0.2,0.75,0.5,1,2;...
            %  double('N'),0.5,0.2,0.75,1,2;...
            double('<'),0.5,0.5,0.5,1,1.5;...
            double('>'),0.5,0.5,0.5,1,1.5;...
            ];
    case 'defaultshading_noresult_blackspikes'
        shadingmap = ...
            [...
            double('<'),double('>'),0.85,0.85,0.85,1;...
            double('M'),double('m'),0.7,0.7,0.7,1;... %motif start,stop
            ];
        codemap = ...
            [...
            1,0,0,0,0.9,1;... %passive spikes
            2,0,0,0,0.9,1;... %engaged spikes
            double('<'),0.5,0.5,0.5,1,1.5;...
            double('>'),0.5,0.5,0.5,1,1.5;...
            ];
    case 'ndbehavior'
        shadingmap = [];
        codemap = ...
            [...
            0,0.8,0.7,0.4,0.9,1;...
            1,0.4,1,0.4,0.9,1;...
            2,0.5,0.2,0.75,0.9,1;...
            ];
end

end